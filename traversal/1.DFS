class Solution {
    public ArrayList<Integer> dfs(ArrayList<ArrayList<Integer>> adj) {
        Set<Integer> visited = new HashSet<>();
        ArrayList<Integer> result = new ArrayList<>();
        
        for (int i = 0; i < adj.size(); i++) {
            if (!visited.contains(i)) {
                helper(adj, visited, result, i);
            }
        }
        
        return result;
    }

    private void helper(ArrayList<ArrayList<Integer>> adj, Set<Integer> visited, List<Integer> result, int node) {
        visited.add(node);
        result.add(node);
        
        for (int neighbor : adj.get(node)) {
            if (!visited.contains(neighbor)) {
                helper(adj, visited, result, neighbor);
            }
        }
    }
}
